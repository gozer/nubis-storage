{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Nubis Storage Ceph Cluster",
  "Parameters": {
    "StackName": {
      "Description": "Name of the parent stack",
      "AllowedPattern": "^[a-zA-Z][a-zA-Z0-9-]{0,254}$",
      "ConstraintDescription": "A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 255 characters.",
      "Type": "String"
    },
    "ServiceName": {
      "Description": "The name of the service this belongs to",
      "AllowedPattern": "^[a-z0-9][a-z0-9-.]*$",
      "Type": "String"
    },
    "TechnicalOwner": {
      "Description": "A valid LDAP email",
      "AllowedPattern": "^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$",
      "Type": "String"
    },
    "Environment": {
      "Description": "Environment we are deploying into",
      "Default": "sandbox",
      "Type": "String",
      "AllowedValues": [
        "admin",
        "prod",
        "stage",
        "sandbox"
      ],
      "ConstraintDescription": "Must specify prod, stage, or sandbox."
    },
    "SSHKeyName": {
      "Description": "Name of and existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String"
    },
    "StacksVersion": {
      "Description": "Version of the Nubis Stacks",
      "Type": "String",
      "Default": "v1.0.0"
    },
    "InstanceType": {
      "Description": "EC2 Instance type",
      "Type": "String",
      "Default": "m3.medium",
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge"
      ],
      "NoEcho": "true"
    },
    "VolumeSize": {
      "Description": "Size in GB of the volume",
      "Type": "String",
      "Default": "50"
    },
    "ClusterSize": {
      "Description": "Members of the cluster, keep an odd number",
      "Type": "String",
      "AllowedPattern": "^([1-9][0-9]*)$",
      "Default": "3"
    },
    "EC2SecurityGroup": {
      "Description": "The security group ID of clients of this cluster",
      "AllowedPattern": "^sg-[0-9a-f]{8}$",
      "Type": "String"
    }
  },
  "Mappings": {
    "AMIs": {
      "us-west-2": {
        "AMI": "ami-91dbcba1"
      },
      "us-east-1": {
        "AMI": "ami-eb54d080"
      }
    }
  },
  "Resources": {
    "VpcInfo": {
      "Type": "Custom::VpcInfo",
      "Properties": {
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:lambda:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":function:",
              "LookupNestedStackOutputs"
            ]
          ]
        },
        "StackName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::Region"
              },
              "vpc"
            ]
          ]
        },
        "SearchString": {
          "Ref": "Environment"
        }
      }
    },
    "CephSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Inter-Server communication",
        "VpcId": {
          "Fn::GetAtt": [
            "VpcInfo",
            "VpcId"
          ]
        }
      }
    },
    "CephSecurityGroupIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "CephSecurityGroup"
        },
        "IpProtocol": "tcp",
        "ToPort": "6810",
        "FromPort": "6789",
        "SourceSecurityGroupId": {
          "Ref": "CephSecurityGroup"
        }
      },
      "DependsOn": "CephSecurityGroup"
    },
    "EC2SecurityGroupIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "CephSecurityGroup"
        },
        "IpProtocol": "tcp",
        "ToPort": "6810",
        "FromPort": "6789",
        "SourceSecurityGroupId": {
          "Ref": "EC2SecurityGroup"
        }
      },
      "DependsOn": "CephSecurityGroup"
    },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AMIs",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "SecurityGroups": [
          {
            "Ref": "CephSecurityGroup"
          },
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "InternetAccessSecurityGroupId"
            ]
          },
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "SharedServicesSecurityGroupId"
            ]
          }
        ],
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "SSHKeyName"
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sdk",
            "Ebs": {
              "VolumeSize": {
                "Ref": "VolumeSize"
              }
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "BackupInstanceProfile"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "NUBIS_DOMAIN=nubis.allizom.org\n",
                "NUBIS_ENVIRONMENT=",
                {
                  "Ref": "Environment"
                },
                "\n",
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_STACK='",
                      {
                        "Ref": "StackName"
                      },
                      "'"
                    ]
                  ]
                },
                "\n",
                "NUBIS_PROJECT=",
                {
                  "Ref": "ServiceName"
                },
                "\n",
                "NUBIS_STORAGE_CLUSTER_SIZE=",
                {
                  "Ref": "ClusterSize"
                },
                "\n",
                "NUBIS_STORAGE_BUCKET=",
                {
                  "Fn::GetAtt": [
                    "BackupBucketStack",
                    "Outputs.S3Bucket"
                  ]
                },
                "\n",
                "NUBIS_ACCOUNT=",
                {
                  "Fn::GetAtt": [
                    "VpcInfo",
                    "ServiceName"
                  ]
                },
                "\n"
              ]
            ]
          }
        }
      }
    },
    "BackupBucketStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": { "Fn::Join": [ "/", [ "https://s3.amazonaws.com/nubisproject-stacks", { "Ref": "StacksVersion" }, "s3-bucket.template" ] ] },
        "Parameters": {
          "ServiceName": {
            "Ref": "ServiceName"
          },
          "TechnicalOwner": {
            "Ref": "TechnicalOwner"
          },
          "Environment": {
            "Ref": "Environment"
          },
          "AccessControl": "Private",
          "VersioningConfiguration": "Enabled",
          "BucketName": {
            "Fn::Join": [
              "-",
              [
                {
                  "Ref": "StackName"
                },
                "storage",
                "backup",
                {
                  "Fn::GetAtt": [
                    "VpcInfo",
                    "ServiceName"
                  ]
                },
                {
                  "Ref": "Environment"
                },
                {
                "Ref": "AWS::Region"
                }
              ]
            ]
          }
        }
      }
    },
    "BackupRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "BackupRolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "StackName"
              },
              "storage",
              "backup"
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:*"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Fn::GetAtt": [
                        "BackupBucketStack",
                        "Outputs.S3Bucket"
                      ]
                    }
                  ]
                ]
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:*"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Fn::GetAtt": [
                        "BackupBucketStack",
                        "Outputs.S3Bucket"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ]
        },
        "Roles": [
          {
            "Ref": "BackupRole"
          }
        ]
      }
    },
    "BackupInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "BackupRole"
          }
        ]
      }
    },
    "AutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": "true"
        },
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "WaitOnResourceSignals": "false",
          "PauseTime": "PT15M"
        }
      },
      "Properties": {
        "VPCZoneIdentifier": [
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "PrivateSubnetAZ1"
            ]
          },
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "PrivateSubnetAZ2"
            ]
          },
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "PrivateSubnetAZ3"
            ]
          }
        ],
        "Cooldown": 30,
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig"
        },
        "MinSize": {
          "Ref": "ClusterSize"
        },
        "DesiredCapacity": {
          "Ref": "ClusterSize"
        },
        "MaxSize": {
          "Ref": "ClusterSize"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "Nubis Storage Node (",
                  {
                    "Ref": "ServiceName"
                  },
                  ")"
                ]
              ]
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Purpose",
            "Value": "Storage Server",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Backups",
            "Value": "Nightly",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Shutdown",
            "Value": "Never",
            "PropagateAtLaunch": "true"
          }
        ]
      }
    }
  },
  "Outputs": {
    "BackupBucket": {
      "Description": "Consul: config/ Backup Bucket Name",
      "Value": {
        "Fn::GetAtt": [
          "BackupBucketStack",
          "Outputs.S3Bucket"
        ]
      }
    }
  }
}
